{"version":3,"sources":["components/header/header.js","config.js","components/imageshaker/imageshaker.js","components/viewer/viewer.js","capabilities.js","index.js","register-serviceworker.js"],"names":["Header","react_default","a","createElement","id","src","process","alt","className","React","Component","currentConfig","dataUrl","ImageShaker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","updateImage","seismograph","Seismograph","minShakes","minAmplitude","onShake","delay","startRecording","getDataUrl","range","url","Math","floor","random","concat","state","maxComics","currentHistory","history","lastIndex","length","fetchPayload","then","body","setState","currentIndex","fetch","response","json","catch","err","console","log","prev","idx","next","renderComic","payload","img","num","title","renderButtonGroup","onClick","render","currentPayload","stopRecording","Viewer","header_Header","imageshaker_ImageShaker","capabilities","sw","navigator","idb","window","sync","ReactDOM","viewer_Viewer","document","getElementById","serviceWorker","register","registration"],"mappings":"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","file":"static/js/main.e614b8a0.chunk.js","sourcesContent":["import React from \"react\";\nimport './header.css';\n\nexport default class Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <div id={\"headerContainer\"}>\n                    <img src={process.env.PUBLIC_URL + \"/img/logo.png\"} alt={\"Logo\"}/>\n                    <span className={\"title\"}>pwa</span>\n                </div>\n            </header>\n        )\n    }\n}\n","const currentConfig = {\n  dataUrl: \"https://xkcd.com/\"\n};\n\nexport default currentConfig;\n","import React from \"react\";\n\nimport \"./imageshaker.css\";\nimport currentConfig from \"../../config\";\nimport { Seismograph } from \"device-motion\";\n\nexport default class ImageShaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.seismograph = null;\n    this.state = {\n      history: [{}],\n      currentIndex: 0\n    };\n    this.fetchPayload(this.getDataUrl()).then(body => {\n      this.setState({\n        history: [body],\n        currentIndex: this.state.history.length - 1,\n        maxComics: body.num\n      });\n    });\n  }\n\n  componentDidMount = () => {\n    this.updateImage();\n    if (!this.seismograph) {\n      this.seismograph = new Seismograph({\n        minShakes: this.props.minShakes || 3,\n        minAmplitude: this.props.minAmplitude|| 3,\n        onShake: this.updateImage,\n        delay: this.props.delay || 1500\n      });\n    }\n    this.seismograph.startRecording();\n  };\n\n  componentWillUnmount() {\n    if (this.seismograph) {\n      this.seismograph.stopRecording();\n    }\n  }\n\n  getDataUrl = range => {\n    let url = currentConfig.dataUrl;\n    if (range) {\n      const id = Math.floor(Math.random() * (range - 1) + 1);\n      return `${url}${id}/info.0.json`\n    }\n    \n    return url;\n  };\n\n  updateImage = () => {\n    const url = this.getDataUrl(this.state.maxComics);\n    const currentHistory = this.state.history;\n    let lastIndex = this.state.history.length - 1;\n\n    this.fetchPayload(url).then(body => {\n      this.setState({\n        history: currentHistory.concat([body]),\n        currentIndex: ++lastIndex\n      });\n    });\n  };\n\n  fetchPayload = url => {\n    return fetch(url)\n      .then(response => response.json())\n      .catch(err => console.log(err));\n  };\n\n  prev = () => {\n    let idx = this.state.currentIndex;\n    this.setState({\n      currentIndex: --idx\n    });\n  };\n\n  next = () => {\n    let idx = this.state.currentIndex;\n    this.setState({\n      currentIndex: ++idx\n    });\n  };\n\n  renderComic = payload => {\n    if (payload) {\n      return (\n        <div id={\"comicContainer\"}>\n          <div id={\"imageContainer\"}>\n            <img className={\"comic\"} src={payload.img} alt={payload.alt} />\n            <div id={\"comicName\"}>\n              <span>\n                #{payload.num} | {payload.title}\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return <div id={\"imageContainer\"} />;\n  };\n\n  renderButtonGroup = () => {\n    return (\n      <div className={\"buttongroup\"}>\n        {this.state.currentIndex > 1 && (\n          <button onClick={this.prev}>&lt;</button>\n        )}\n        <button id={\"shuffleBtn\"} onClick={this.updateImage}>\n          Get me another one!\n        </button>\n        {this.state.currentIndex < this.state.history.length - 1 && (\n          <button onClick={this.next}>&gt;</button>\n        )}\n        <div className=\"clearer\" />\n      </div>\n    );\n  };\n\n  render = () => {\n    const currentPayload = this.state.history[this.state.currentIndex];\n\n    return (\n      <main>\n        {this.renderComic(currentPayload)}\n        {this.renderButtonGroup()}\n      </main>\n    );\n  };\n}\n","import React from \"react\";\nimport Header from '../header/header'\nimport ImageShaker from '../imageshaker/imageshaker';\n\nexport default class Viewer extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <ImageShaker/>\n            </div>\n        );\n    }\n}\n\n","export const capabilities = {\n    sw: 'serviceWorker' in navigator,\n    idb: 'indexedDB' in window || 'mozIndexedDB' in window || 'webkitIndexedDB' in window || 'msIndexedDB' in window,\n    sync: 'serviceWorker' in navigator && 'SyncManager' in window\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Viewer from './components/viewer/viewer'\nimport \"./index.css\";\nimport registerServiceWorker from './register-serviceworker';\n\nReactDOM.render(<Viewer/>, document.getElementById(\"root\"));\nregisterServiceWorker();\n","import {capabilities} from './capabilities';\n\nexport default function registerServiceWorker() {\n    console.log('Trying to register service worker.');\n    if (capabilities.sw) {\n        navigator.serviceWorker\n            .register(process.env.PUBLIC_URL + '/sw.js')\n            .then(registration => console.log(\"Successfully registered service worker:\", registration))\n            .catch(err => console.log(\"Failed to register service worker:\", err));\n    } else {\n        console.log('Service workers not supported, skipping registration.');\n    }\n}\n"],"sourceRoot":""}